# to_do_list 

# Initialize an empty list to store tasks
to_do_list = []

# initializa en empty list to store tasks that have been completed 
completed_list  = []

def display_tasks():
    # display task in the to_do list
    if not to_do_list:
        print("Your to-do list is empty!")
    else:
        print("\nYour to-do List: ")
        for i, task in enumerate(to_do_list,1):
            print(f"{i}. {task}")

    print()


def add_task():
    # add a new task in the to-do list
    task = input("Enter a new task: ").strip()
    if task:
        to_do_list.append(task)
        print(f"Task '{task}' has been added!\n")
    else: 
        print("Task cannot be empty!\n")

def remove_task():
    # remove task from to-do list
    try:
        task_number = int(input("Enter the task number to remove: "))
        if 1 <= task_number <= len(to_do_list):
            removed_task = to_do_list.pop(task_number - 1)
            # add removed task you completed list 
            print(f"Task '{removed_task} has been removed!\n")
        else:
            print("Invalid task number!\n")
    except ValueError:
        print("Please enter a valid number!\n")

def to_do_manager():
    # function to manage to-do list
    while True: 
        print("To-Do List Manager")
        print("1. View Tasks")
        print("2. Add a task")
        print("3. Remove a task")
        print("4. View completed tasks")
        print("5. Exit")

        try:
            # invoke function based on user input
            choice = int(input("Enter your choice (1-4): "))
            if choice == 1:
                display_tasks()  
            elif choice == 2: 
                add_task()
            elif choice == 3:
                remove_task()
            elif choice == 4: 
                print("Goodbye! Have a wonderful day!")
                break 
            else: print("Invalid choice! Please select between 1 and 4. \n")

        # invalid input
        except ValueError:
            print("Please enter a valid number!\n")        

# invoke main function    
to_do_manager()
